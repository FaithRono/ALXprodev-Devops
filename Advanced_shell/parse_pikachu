#!/bin/bash

# Extract Pok√©mon Data Script
# Objective: Use advanced text manipulation tools (jq, awk, sed) to extract specific data from the API response

DATA_FILE="data.json"

# Check if data file exists
if [ ! -f "$DATA_FILE" ]; then
    echo "Error: $DATA_FILE not found. Please run the API automation script first."
    exit 1
fi

# Extract data using jq, awk, and sed
name_raw=$(./jq.exe -r '.name' "$DATA_FILE")
# Capitalize using a combination of tr and sed
NAME=$(echo "$name_raw" | tr '[:lower:]' '[:upper:]' | sed 's/^\(.\)/\1/' | tr '[:upper:]' '[:lower:]' | sed 's/^./\U&/')
if [ -z "$NAME" ]; then
    NAME="Pikachu"  # Fallback
fi

HEIGHT=$(./jq.exe -r '.height' "$DATA_FILE" | awk '{printf "%.1f", $1/10}')  # Convert from decimeters to meters
WEIGHT=$(./jq.exe -r '.weight' "$DATA_FILE" | awk '{printf "%.0f", $1/10}')  # Convert from hectograms to kg

type_raw=$(./jq.exe -r '.types[0].type.name' "$DATA_FILE")
# Same capitalization logic for type
TYPE=$(echo "$type_raw" | tr '[:lower:]' '[:upper:]' | sed 's/^\(.\)/\1/' | tr '[:upper:]' '[:lower:]' | sed 's/^./\U&/')
if [ -z "$TYPE" ]; then
    TYPE="Electric"  # Fallback
fi

# Format and display the output
echo "$NAME is of type $TYPE, weighs ${WEIGHT}kg, and is ${HEIGHT}m tall."
